# This is for better understanding of the Network Policies
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: ewonda
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:1.14.2
          ports:
            - containerPort: 80

---
apiVersion: v1
kind: Pod
metadata:
  name: client
  namespace: ewonda
  labels:
    app: client
spec:
  containers:
    - name: busybox
      image: radial/busyboxplus:curl
      command: ["sh", "-c", "while true; do curl 192.168.32.65; sleep 5; done"]

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namesapce: ewonda
spec:
  podSelector: {} # empty podSelector makes sure all pods in the ns are covered
  policyTypes:
    - Ingress # incomeing traffic
    - Egress # outgoing traffic

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nginx-ingress
  namespace: ewonda
spec:
  podSelector:
    matchLabels:
      app: nginx
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector: # see nsSelector and podSelector: here, both conditions
            matchLabels: # must be met for traffic to flow
              project: test
          podSelector: # if podSelector was an array ie - then either
            matchLabels: # will satisfy the condition for traffic flow
              app: client
      ports:
        - protocol: TCP
          port: 80

#egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nginx-egress
  namespace: ewonda
spec:
  podSelector:
    matchLabels:
      app: client
  policyTypes:
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              project: test
          podSelector:
            matchLabels:
              app: nginx
      ports:
        - protocol: TCP
          port: 80
